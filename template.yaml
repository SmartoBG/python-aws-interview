AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for SAM demo application

Globals:
  Function:
    Timeout: 15
  Api:
    Cors:
      AllowMethods: "'GET,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Parameters:
  DDBTableName:
    Type: String
    Description: The name of the DynamoDB table

Resources:
###################
##    Lambdas    ##
###################
  # lambda function to load initial data
  LoadDataFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./functions/load_data
      Handler: app.lambda_handler
      Runtime: python3.9 
      FunctionName: LoadDataFunction
      Environment:
        Variables:
          DDBTableName: !Ref DDBTableName
      Policies:
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - dynamodb:BatchWriteItem
            Resource: !GetAtt CarTable.Arn
  
  # API stage
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1

##########################
##    DynamoDB Table    ##
##########################
  # DynamoDB table to store car data
  CarTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: 'id'
          AttributeType: 'N'
        - 
          AttributeName: 'last_updated'
          AttributeType: 'S'
      KeySchema: 
        - 
          AttributeName: 'id'
          KeyType: 'HASH'
        - 
          AttributeName: 'last_updated'
          KeyType: 'RANGE'
      TableName: !Ref DDBTableName
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5